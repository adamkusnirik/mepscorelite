# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;
limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=perip:10m;

# Map for security headers
map $sent_http_content_type $csp_header {
    default "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https://cdn.tailwindcss.com; font-src 'self' data:; img-src 'self' data: https:; connect-src 'self' https:; base-uri 'self'; form-action 'self';";
    ~text/html "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https://cdn.tailwindcss.com; font-src 'self' data:; img-src 'self' data: https:; connect-src 'self' https:; base-uri 'self'; form-action 'self';";
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name mepscore.eu www.mepscore.eu;
    
    # Allow Let's Encrypt validation
    location ^~ /.well-known/acme-challenge/ {
        allow all;
        root /var/lib/letsencrypt/;
        default_type "text/plain";
        try_files $uri =404;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    server_name mepscore.eu www.mepscore.eu;

    # SSL Configuration (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/mepscore.eu/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mepscore.eu/privkey.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # SSL optimization
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/mepscore.eu/chain.pem;
    resolver 1.1.1.1 8.8.8.8 valid=300s;
    resolver_timeout 5s;

    # Enhanced security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Content-Security-Policy $csp_header always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=()" always;

    # Root directory
    root /var/www/mepscore/public;
    index index.html;
    
    # Connection limiting
    limit_conn perip 20;

    # Advanced gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml
        application/xml+rss
        application/x-javascript
        font/truetype
        font/opentype
        image/svg+xml;

    # Brotli compression (if available)
    brotli on;
    brotli_comp_level 6;
    brotli_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml
        application/xml+rss
        application/x-javascript
        font/truetype
        font/opentype
        image/svg+xml;

    # Static assets with far-future expires and immutable cache
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        limit_req zone=static burst=20 nodelay;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Pre-compressed files
        gzip_static on;
        brotli_static on;
        
        # Security headers for static files
        add_header X-Content-Type-Options nosniff always;
        
        # CORS for fonts
        if ($request_filename ~* \.(woff|woff2|ttf|eot)$) {
            add_header Access-Control-Allow-Origin "*";
        }
    }

    # JSON data files with shorter cache and conditional requests
    location ~* \.json$ {
        limit_req zone=static burst=10 nodelay;
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header Vary "Accept-Encoding";
        
        # Enable ETag for conditional requests
        etag on;
        if_modified_since exact;
        
        # Pre-compressed files
        gzip_static on;
        brotli_static on;
    }

    # API endpoints with rate limiting and enhanced proxy settings
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        limit_conn perip 5;
        
        # Proxy to Python application
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 60s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # Error handling
        proxy_next_upstream error timeout http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 3s;
        
        # Disable caching for API responses
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # Serve parltrack data files directly with caching
    location /data/parltrack/ {
        limit_req zone=static burst=15 nodelay;
        alias /var/www/mepscore/data/parltrack/;
        expires 2h;
        add_header Cache-Control "public, must-revalidate";
        add_header Vary "Accept-Encoding";
        
        # Pre-compressed files
        gzip_static on;
        brotli_static on;
        
        # Security headers
        add_header X-Content-Type-Options nosniff always;
    }

    # Serve logos and media files
    location /logos/ {
        limit_req zone=static burst=20 nodelay;
        alias /var/www/mepscore/logos/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Security headers
        add_header X-Content-Type-Options nosniff always;
    }

    # Health check endpoint (direct nginx response for monitoring)
    location = /health {
        limit_req zone=general burst=5 nodelay;
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Security.txt for responsible disclosure
    location = /.well-known/security.txt {
        return 200 "Contact: security@mepscore.eu\nExpires: 2025-12-31T23:59:59.000Z\n";
        add_header Content-Type text/plain;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(ini|conf|log|bak|tmp|backup|old)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block access to version control and development files
    location ~ /(.git|.svn|.env|composer|package|yarn|webpack|gulpfile|gruntfile) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Main application files with rate limiting
    location / {
        limit_req zone=general burst=30 nodelay;
        
        # Try files with fallback to index.html for SPA routing
        try_files $uri $uri/ $uri.html @fallback;
        
        # Add security headers for HTML pages
        location ~* \.html$ {
            add_header X-Frame-Options DENY always;
            add_header X-Content-Type-Options nosniff always;
            add_header X-XSS-Protection "1; mode=block" always;
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }
    }

    # Fallback for SPA routing
    location @fallback {
        rewrite ^.*$ /index.html last;
    }

    # Custom error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /var/www/mepscore/public;
    }

    # Enhanced logging with detailed format
    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/mepscore_access.log detailed buffer=16k;
    error_log /var/log/nginx/mepscore_error.log warn;
}

# Additional server block for www redirect (if needed)
server {
    listen 443 ssl http2;
    server_name www.mepscore.eu;
    
    # Same SSL configuration
    ssl_certificate /etc/letsencrypt/live/mepscore.eu/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mepscore.eu/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Redirect www to non-www
    return 301 https://mepscore.eu$request_uri;
}